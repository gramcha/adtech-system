spring:
  application:
    name: ingest-service
  json:
    trusted:
      packages: com.gramcha.ingestservice.entities
  redis:
 #add "127.0.0.1 redis" without quote in /etc/hosts for running without docker when redis running locally. 
    host: redis
    port: 6379
  kafka:
#add "127.0.0.1 kafka" without quote in /etc/hosts for running without docker when kafka running locally.  
    bootstrap-servers: kafka:9092
    producer:
      auto-offset-reset: earliest
      group-id: boot
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: false
      group-id: boot
      #value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: com.gramcha.ingestservice.CustomJsonDeserializer      
    listener:
      ack-mode: MANUAL

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Caused by: java.lang.IllegalArgumentException: The class 'com.gramcha.ingestservice.entities.DeliveryTracker' is not in the trusted packages: [java.util, java.lang]. If you believe this class is safe to deserialize, please provide its name. If the serialization is only done by a trusted source, you can also enable trust all (*).
#Fix:
#spring.kafka.consumer.properties.spring.json.trusted.packages=org.foo,org.bar

#spring.kafka.bootstrap-servers=localhost:9092.     